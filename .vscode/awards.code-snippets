{
	// Place your femboybot workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Awards: Create input": {
		"scope": "javascript,typescript",
		"prefix": "in",
		"body": [
			"const input$1 = new TextInputBuilder()\r\n\t.setCustomId('$2')\r\n\t.setLabel('$3')\r\n\t.setStyle(TextInputStyle.Short);"
		],
		"description": "Create input"
	},
	"Awards: ActionRowBuilder": {
		"scope": "javascript,typescript",
		"prefix": "ac",
		"body": [
			"const $1 =\r\n\tnew ActionRowBuilder<ModalActionRowComponentBuilder>().addComponents(\r\n\t\tinput$2\r\n\t);"
		],
		"description": "Create ActionRowBuilder"
	},
	"Awards: Response": {
		"scope": "javascript,typescript",
		"prefix": "res",
		"body": [
			"const resp$1 = ctx.fields.getTextInputValue('$2')"
		],
		"description": "ye"
	}
}